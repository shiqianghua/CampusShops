<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:lang="http://www.springframework.org/schema/lang"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd ">

    <!--Redis连接池的设置-->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!--控制一个pool可分配多少个Redis-->
        <property name="maxTotal" value="${redis.pool.maxActive}"/>
        <!--连接池中最多可空闲maxIdle个连接，这里取20，表示即使没有数据库连接时可以保持20空闲个连接，
        而不被连接，而不被清除，随时处于待命状态-->
        <property name="maxIdle" value="${redis.pool.maxIdle}"/>
        <!--最大等待时间：当没有可用连接时，连接池等待被连接被归还的最大时间（一毫秒计数），超过时间则抛出异常-->
        <property name="maxWaitMillis" value="${redis.pool.maxWait}"/>
        <!--在获取连接的时候检查有效性-->
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>
    </bean>

    <!--创建Redis连接池，并做相关配置-->
    <bean id="jedisPoolWriper" class="com.java.o2o.cache.JedisPoolWriper" depends-on="jedisPoolConfig">
        <constructor-arg index="0" ref="jedisPoolConfig"/>
        <constructor-arg index="1" value="${redis.hostname}"/>
        <constructor-arg index="2" value="${redis.port}" type="int"/>
    </bean>

    <!--创建Redis工具类，封装好Redis的连接以进行相关的操作-->
    <bean id="jedisUtil" class="com.java.o2o.cache.JedisUtil" scope="singleton"><!--singleton在服务器启动过程只有这个类提供调用-->
        <property name="jedisPool">
            <ref bean="jedisPoolWriper"/>
        </property>

       <!-- <property name="KEYS">
            <ref bean="jedisKeys"/>
        </property>-->
    </bean>


   <!-- <bean id="jedisKeys" class="com.java.o2o.cache.JedisUtil$Keys" scope="singleton">
    </bean>-->

   <!-- <bean id="jedisStrings" class="com.java.o2o.cache.JedisUtil$Strings" scope="singleton">
        <constructor-arg index="0" ref="jedisUtil"/>
    </bean>

    <bean id="jedisLists" class="com.java.o2o.cache.JedisUtil$Lists" scope="singleton">
        <constructor-arg index="0" ref="jedisUtil"/>
    </bean>

    <bean id="jedisSets" class="com.java.o2o.cache.JedisUtil$Sets" scope="singleton">
        <constructor-arg index="0" ref="jedisUtil"/>
    </bean>

    <bean id="jedisHash" class="com.java.o2o.cache.JedisUtil$Hash" scope="singleton">
        <constructor-arg index="0" ref="jedisUtil"/>
    </bean>
-->

</beans>